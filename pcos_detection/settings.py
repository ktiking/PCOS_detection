"""
Django settings for pcos_detection project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# this is where our project lives
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
# this is like a password for our app - don't share it!
SECRET_KEY = 'django-insecure-#bq-v0$rn5^%$@v)85gd+fdg5&p!$*8mwfd0rkcyndo(yl-e2d'

# SECURITY WARNING: don't run with debug turned on in production!
# debug mode shows errors to users - turn this off when we go live
DEBUG = True

# which websites can use our app
ALLOWED_HOSTS = []

# all the apps our project uses
INSTALLED_APPS = [
    'django.contrib.admin',  # the admin panel
    'django.contrib.auth',   # user accounts
    'django.contrib.contenttypes',  # content types
    'django.contrib.sessions',  # user sessions
    'django.contrib.messages',  # flash messages
    'django.contrib.staticfiles',  # static files like CSS
    'pcos',  # our PCOS prediction app
]

# middleware is like security guards for our app
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',  # stops bad guys from submitting forms
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# where to find our URLs
ROOT_URLCONF = 'pcos_detection.urls'

# how to handle templates (HTML files)
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# how to run our app
WSGI_APPLICATION = 'pcos_detection.wsgi.application'

# database settings - we're using MySQL with XAMPP
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'pcos_detection',
        'USER': 'root',
        'PASSWORD': '',  # XAMPP MySQL default has no password
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

# password rules
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# language and time settings
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Manila'  # Set to Philippines timezone
USE_I18N = True
USE_TZ = True

# where to find our static files (CSS, JS, images)
STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# use big numbers for IDs
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# where to go after login/logout
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'login'

# how to style our messages
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}
